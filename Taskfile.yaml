version: 3
silent: false
tasks:
  clean:
    cmds:
      - "rm -f unit-test-report.md"
      - "go clean -cache -testcache"

  vendor:
    cmds:
      - "go mod vendor"

  lint:
    cmds:
      - "go fmt -x ./..."

  lint:check:
    cmds:
      - "R=$(go fmt ./...) && if [[ -n \"$R\" ]]; then echo \"The following files require formatting:\"; echo \"$R\"; exit 1; fi"

  build:
    cmds:
      - "go build -v ./..."

  test:
    cmds:
      - task: "test:unit"

  test:unit:
    cmds:
      # Using go-testreport v0.3.2
      - "go install github.com/becheran/go-testreport@90efc1ce13c872f23d6bc8a069527c26288b8f9c"
      - "go test -race -cover -json ./... | go-testreport -output unit-test-report.md -vars 'Title:Unit Test Report'"

  test:coverage:
    cmds:
      - "go install github.com/vladopajic/go-test-coverage/v2@7003e902e787e60375e1ce3ae5b85b19313dbff2"
      - "go test -race -cover -json . -coverprofile=./cover.out -covermode=atomic -coverpkg=./..."
      - "go-test-coverage --config=./.testcoverage.yml"

  install:go:
    deps:
      - "install:go:linux"

  install:go:linux:
    internal: true
    status:
      - "command -v go"
    platforms:
      - "linux/amd64"
      - "linux/arm64"
    cmds:
      - "curl -sSLO https://go.dev/dl/go{{.GO_VERSION}}.{{OS}}-{{ARCH}}.tar.gz"
      - "sudo mkdir -p /usr/local/go"
      - "sudo tar -C /usr/local -xzf go{{.GO_VERSION}}.{{OS}}-{{ARCH}}.tar.gz"
      - "rm -f go{{.GO_VERSION}}.{{OS}}-{{ARCH}}.tar.gz"
      - "echo 'PATH=\"${PATH}:/usr/local/go/bin\"' | sudo tee /etc/profile.d/go.sh >/dev/null 2>&1"
      - "source /etc/profile.d/go.sh"
    generates:
      - "/usr/local/go/**"
